[{"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/index.js":"1","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/reportWebVitals.js":"2","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/App.js":"3","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Header.js":"4","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Buttons.js":"5","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Cards.js":"6","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Login.js":"7","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/chats/ChatScreen.js":"8","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/chats/Chats.js":"9","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/firebase.js":"10","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/chats/Chat.js":"11","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Profile.js":"12"},{"size":500,"mtime":1646409890791,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1646409890791,"results":"15","hashOfConfig":"14"},{"size":1437,"mtime":1646410575052,"results":"16","hashOfConfig":"14"},{"size":1406,"mtime":1646410659111,"results":"17","hashOfConfig":"14"},{"size":1158,"mtime":1646409890789,"results":"18","hashOfConfig":"14"},{"size":3825,"mtime":1646410378562,"results":"19","hashOfConfig":"14"},{"size":1041,"mtime":1646409890790,"results":"20","hashOfConfig":"14"},{"size":2111,"mtime":1646409890791,"results":"21","hashOfConfig":"14"},{"size":625,"mtime":1646409890791,"results":"22","hashOfConfig":"14"},{"size":719,"mtime":1646409890791,"results":"23","hashOfConfig":"14"},{"size":621,"mtime":1646409890791,"results":"24","hashOfConfig":"14"},{"size":2559,"mtime":1646410475950,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j9jck4",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/index.js",[],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/reportWebVitals.js",[],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/App.js",["65"],[],"import React from 'react';\nimport Header from \"./Header\"\nimport Cards from \"./Cards\"\nimport Buttons from './Buttons';\nimport Chats from \"./chats/Chats\";\nimport Profile from \"./Profile\"\nimport ChatScreen from \"./chats/ChatScreen\";\nimport Login from \"./Login\";\nimport './App.css';\n\nimport {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n\n        <Switch>\n          <Route path = \"/login\">\n            <Login /> \n          </Route>\n\n\n          {/* Chats Screen */}\n          <Route path = \"/messages/:person\">\n            {/* Header */}\n            <Header backButton=\"/messages\" />\n            <ChatScreen />\n          </Route>\n\n          {/* Chats Screen */}\n          <Route path = \"/messages\">\n            {/* Header */}\n            <Header backButton=\"/\" />\n            <Chats />\n          </Route>\n          {/* Profile Screen */}\n          <Route path=\"/profile\">\n            {/* Header */}\n            <Header backButton=\"/\" />\n            <Profile />\n          </Route>\n          {/* Main Page */}\n          <Route path = \"/\">\n            {/* Header */}\n            <Header />\n            {/* Cards Container*/}\n            <Cards />\n            {/* Buttons below */}\n            <Buttons />\n          </Route>\n          \n        </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n\n        \n{/* Individual chat screen */}\n\n\n\n",["66","67"],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Header.js",[],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Buttons.js",["68"],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Cards.js",["69","70","71"],[],"import \"./Cards.css\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport TinderCard from \"react-tinder-card\"\r\nimport database from \"./firebase\"\r\nimport { collection, getDocs } from 'firebase/firestore/lite';\r\nimport { doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore/lite\";\r\n\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\n\r\n\r\nfunction Cards() {\r\n    const [lastDirection, setLastDirection] = useState([])\r\n    const [people, setPeople] = useState([]);\r\n\r\n    // Every time swipe the card , call swiped function to log the swipe name and direction\r\n    async function swiped (direction, nameToSwipe, peopleId) {\r\n        setLastDirection(direction)\r\n        if (direction == \"right\") {\r\n            console.log(\"removing: \"+ nameToSwipe)\r\n            const docRef = doc(database, 'people/'+peopleId)\r\n            await updateDoc(docRef, {\r\n                matches: arrayUnion(\"SL3GgUJDB3v3hpC1c1Zx\") //User's document id \r\n            })\r\n            console.log(\"Add \"+ nameToSwipe+\" to like\")\r\n        } else {\r\n            console.log(\"Dislike\")\r\n        }\r\n        \r\n    }\r\n\r\n    // Log which person leave the screen\r\n    function outOfFrame(name) {\r\n        console.log(name + \"left the screen\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        // collection(database,'people').onSnapshot(snapshot => (\r\n        //     snapshot.docs.map(doc => doc.data())\r\n        // ))\r\n\r\n        // const peopleSnapshot = await getDocs(collection(database, 'people'))\r\n        // peopleSnapshot.docs.map(doc => doc.data())\r\n        \r\n        async function getPeople(){\r\n            const peopleSnapshot = await getDocs(collection(database, 'people'));\r\n            const peopleList = peopleSnapshot.docs.map(doc => {\r\n                    const id = doc.id;\r\n                    const data = doc.data();\r\n                    return {id, ...data};\r\n                });\r\n            setPeople(peopleList);\r\n            return peopleList;\r\n        }\r\n\r\n        (async() => {\r\n            const unsubscribe = await getPeople();\r\n            \r\n            return() => {\r\n                unsubscribe();\r\n            }\r\n        })();\r\n        \r\n\r\n    },[])\r\n\r\n    function havePic (person) {\r\n        if (person.name != null && person.url != null) return true\r\n    }\r\n\r\n    return ( \r\n        <div className=\"swipe_container\">\r\n            <ArrowBackIosIcon className=\"arrowBack\" sx={{ fontSize: 100 }} color=\"disabled\"/>\r\n            <div className=\"cards_container\">\r\n                {people.map(person => (\r\n                    <TinderCard className = \"swipe\"\r\n                                key = {person.name}\r\n                                preventSwipe = {['up', 'down']}\r\n                                onSwipe = {(dir) => swiped(dir, person.name, person.id)}\r\n                                onCardLeftScreen = {() => outOfFrame(person.name)} >\r\n                            {havePic(person) ? (\r\n                                <div className = \"card\" style = {{backgroundImage: `url(${person.url})`}}>\r\n                                <div className = \"info\">\r\n                                    <h3>{person.name}</h3>\r\n                                    <h5>Age: {person.age} Job: {person.job}</h5>\r\n                                </div>\r\n                                \r\n                                </div>\r\n                            ) : (\r\n                                <div></div>\r\n                            )}\r\n                            \r\n                    </TinderCard>\r\n                ))}\r\n                \r\n            </div>\r\n            <ArrowForwardIosIcon className=\"arrowFor\" sx={{ fontSize: 100 }} color=\"disabled\"/>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Cards","/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Login.js",[],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/chats/ChatScreen.js",["72"],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/chats/Chats.js",[],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/firebase.js",["73"],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/chats/Chat.js",["74"],[],"/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/Profile.js",["75","76"],[],{"ruleId":"77","severity":1,"message":"78","line":65,"column":1,"nodeType":"79","messageId":"80","endLine":65,"endColumn":31},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":41,"column":10,"nodeType":"87","messageId":"88","endLine":41,"endColumn":19},{"ruleId":"85","severity":1,"message":"89","line":6,"column":38,"nodeType":"87","messageId":"88","endLine":6,"endColumn":49},{"ruleId":"85","severity":1,"message":"90","line":14,"column":12,"nodeType":"87","messageId":"88","endLine":14,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":20,"column":23,"nodeType":"93","messageId":"94","endLine":20,"endColumn":25},{"ruleId":"85","severity":1,"message":"95","line":2,"column":27,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"85","severity":1,"message":"96","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":21},{"ruleId":"85","severity":1,"message":"97","line":4,"column":17,"nodeType":"87","messageId":"88","endLine":4,"endColumn":27},{"ruleId":"85","severity":1,"message":"98","line":7,"column":10,"nodeType":"87","messageId":"88","endLine":7,"endColumn":14},{"ruleId":"85","severity":1,"message":"97","line":7,"column":16,"nodeType":"87","messageId":"88","endLine":7,"endColumn":26},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'likeClick' is defined but never used.","Identifier","unusedVar","'arrayRemove' is defined but never used.","'lastDirection' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'getDatabase' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]