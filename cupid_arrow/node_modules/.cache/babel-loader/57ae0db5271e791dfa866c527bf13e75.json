{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { initializeApp } from 'firebase/app';\nimport { addDoc, doc, getDoc, getFirestore, setDoc } from 'firebase/firestore/lite';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// Import the functions you need from the SDKs you need\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZ3xpss7kMrVljtzhQqxCnRfAr-NaNTow\",\n  authDomain: \"cupidarrow-a5c67.firebaseapp.com\",\n  databaseURL: \"https://cupidarrow-a5c67-default-rtdb.firebaseio.com\",\n  projectId: \"cupidarrow-a5c67\",\n  storageBucket: \"cupidarrow-a5c67.appspot.com\",\n  messagingSenderId: \"577557217376\",\n  appId: \"1:577557217376:web:24fe4b973ea1b3d7234305\",\n  measurementId: \"G-T3PW968LV6\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\n;\nconst database = getFirestore(firebaseApp);\nconst auth = getAuth();\nexport async function signup(email, password) {\n  return createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n    const user = userCredential.user;\n    createUserDoc(user);\n  });\n}\nexport function login(email, password) {\n  return signInWithEmailAndPassword(auth, email, password);\n}\nexport function logout() {\n  return signOut(auth);\n} // Custom Hook\n\nexport function useAuth() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\n    return unsub;\n  }, []);\n  return currentUser;\n}\n\n_s(useAuth, \"JvEwyYHOqow2S+nE9g1bJVQib+s=\");\n\nexport async function createUserDoc(user) {\n  if (!user) return;\n  console.log(user.uid);\n  const userRef = doc(database, `people/${user.uid}`);\n  const snapshot = await getDoc(userRef); //get the user snapshot if exist\n  // if not exist\n\n  if (!snapshot.exists()) {\n    const email = user.email;\n    console.log(email);\n\n    try {\n      await setDoc(doc(database, \"people\", user.uid), {\n        email: email,\n        mathches: [],\n        name: \"Test\",\n        url: \"\"\n      });\n    } catch (error) {\n      console.log('Eooro in creating user', error);\n    }\n  } else {\n    console.log(\"DATA:!!! \", snapshot.data());\n  }\n}\nexport default database;","map":{"version":3,"sources":["/Users/gary/Documents/GitHub/project-cereal-killers/cupid_arrow/src/firebase.js"],"names":["initializeApp","addDoc","doc","getDoc","getFirestore","setDoc","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","useEffect","useState","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","database","auth","signup","email","password","then","userCredential","user","createUserDoc","login","logout","useAuth","currentUser","setCurrentUser","unsub","console","log","uid","userRef","snapshot","exists","mathches","name","url","error","data"],"mappings":"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","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { addDoc, doc, getDoc,  getFirestore, setDoc} from 'firebase/firestore/lite';\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// Import the functions you need from the SDKs you need\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAZ3xpss7kMrVljtzhQqxCnRfAr-NaNTow\",\r\n  authDomain: \"cupidarrow-a5c67.firebaseapp.com\",\r\n  databaseURL: \"https://cupidarrow-a5c67-default-rtdb.firebaseio.com\",\r\n  projectId: \"cupidarrow-a5c67\",\r\n  storageBucket: \"cupidarrow-a5c67.appspot.com\",\r\n  messagingSenderId: \"577557217376\",\r\n  appId: \"1:577557217376:web:24fe4b973ea1b3d7234305\",\r\n  measurementId: \"G-T3PW968LV6\"\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);;\r\n\r\nconst database = getFirestore(firebaseApp);\r\nconst auth = getAuth();\r\n\r\nexport async function signup(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password). then ((userCredential) => {\r\n\t  const user = userCredential.user;\r\n\t  createUserDoc(user);\r\n  });\r\n\r\n}\r\n\r\nexport function login(email, password) { \r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return signOut(auth);\r\n}\r\n\r\n// Custom Hook\r\nexport function useAuth() {\r\n  const [ currentUser, setCurrentUser ] = useState();\r\n\r\n  useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, user => setCurrentUser(user));\r\n    return unsub;\r\n  }, [])\r\n\r\n  return currentUser;\r\n}\r\n\r\nexport async function createUserDoc(user){\r\n\tif (!user) return;\r\n\tconsole.log(user.uid);\r\n\tconst userRef = doc(database, `people/${user.uid}`);\r\n\tconst snapshot = await getDoc(userRef); //get the user snapshot if exist\r\n\t// if not exist\r\n\tif (!snapshot.exists()) {\r\n\t\tconst email = user.email;\r\n\t\tconsole.log(email);\r\n\t\ttry {\r\n\t\t\tawait setDoc(doc (database, \"people\", user.uid), {\r\n\t\t\t\temail: email,\r\n\t\t\t\tmathches : [ ],\r\n\t\t\t\tname : \"Test\",\r\n\t\t\t\turl : \"\",\r\n\t\t\t})\r\n\t\t} catch(error) {\r\n\t\t\tconsole.log ('Eooro in creating user', error)\r\n\t\t}\r\n\t}else {\r\n\t\tconsole.log(\"DATA:!!! \" , snapshot.data());\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport default database;"]},"metadata":{},"sourceType":"module"}