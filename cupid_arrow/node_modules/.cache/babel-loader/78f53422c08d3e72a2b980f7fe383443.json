{"ast":null,"code":"var _jsxFileName = \"D:\\\\uOttawa\\\\2022 W\\\\CSI 3140\\\\Project\\\\Cupid-Arrow\\\\cupid_arrow\\\\src\\\\Cards.js\",\n    _s = $RefreshSig$();\n\nimport \"./Cards.css\";\nimport React, { useState, useEffect } from 'react';\nimport TinderCard from \"react-tinder-card\";\nimport database from \"./firebase\";\nimport { collection, getDocs } from 'firebase/firestore/lite';\nimport { doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore/lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards() {\n  _s();\n\n  const [lastDirection, setLastDirection] = useState([]);\n  const [people, setPeople] = useState([]); // Every time swipe the card , call swiped function to log the swipe name and direction\n\n  async function swiped(direction, nameToDelete, peopleId) {\n    console.log(\"removing: \" + nameToDelete);\n    setLastDirection(direction);\n    const docRef = doc(database, 'people/' + peopleId);\n    const personToUpdate = doc(database, \"people\", nameToDelete);\n    await updateDoc(personToUpdate, {\n      matches: arrayUnion(\"SL3GgUJDB3v3hpC1c1Zx\")\n    });\n    console.log(\"remove\");\n  } // Log which person leave the screen\n\n\n  function outOfFrame(name) {\n    console.log(name + \"left the screen\");\n  }\n\n  useEffect(() => {\n    // collection(database,'people').onSnapshot(snapshot => (\n    //     snapshot.docs.map(doc => doc.data())\n    // ))\n    // const peopleSnapshot = await getDocs(collection(database, 'people'))\n    // peopleSnapshot.docs.map(doc => doc.data())\n    async function getPeople() {\n      const peopleSnapshot = await getDocs(collection(database, 'people'));\n      const peopleList = peopleSnapshot.docs.map(doc => {\n        const id = doc.id;\n        const data = doc.data();\n        return {\n          id,\n          ...data\n        };\n      });\n      setPeople(peopleList);\n      return peopleList;\n    }\n\n    (async () => {\n      const unsubscribe = await getPeople();\n      return () => {\n        unsubscribe();\n      };\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"swipe_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards_container\",\n      children: [people.map(person => /*#__PURE__*/_jsxDEV(TinderCard, {\n        className: \"swipe\",\n        preventSwipe: ['up', 'down'],\n        onSwipe: dir => swiped(dir, person.name, person.id),\n        onCardLeftScreen: () => outOfFrame(person.name),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            backgroundImage: `url(${person.url})`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"swipe_info\",\n        children: lastDirection ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You swiped \", lastDirection, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cards, \"X5YzLXjAsJPDcod30LFybHw7N2s=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["D:/uOttawa/2022 W/CSI 3140/Project/Cupid-Arrow/cupid_arrow/src/Cards.js"],"names":["React","useState","useEffect","TinderCard","database","collection","getDocs","doc","updateDoc","arrayUnion","arrayRemove","Cards","lastDirection","setLastDirection","people","setPeople","swiped","direction","nameToDelete","peopleId","console","log","docRef","personToUpdate","matches","outOfFrame","name","getPeople","peopleSnapshot","peopleList","docs","map","id","data","unsubscribe","person","dir","backgroundImage","url"],"mappings":"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","sourcesContent":["import \"./Cards.css\"\r\nimport React, { useState, useEffect } from 'react'\r\nimport TinderCard from \"react-tinder-card\"\r\nimport database from \"./firebase\"\r\nimport { collection, getDocs } from 'firebase/firestore/lite';\r\n\r\nimport { doc, updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore/lite\";\r\n\r\n\r\nfunction Cards() {\r\n    const [lastDirection, setLastDirection] = useState([])\r\n    const [people, setPeople] = useState([]);\r\n\r\n    // Every time swipe the card , call swiped function to log the swipe name and direction\r\n    async function swiped (direction, nameToDelete, peopleId) {\r\n        console.log(\"removing: \"+ nameToDelete)\r\n        setLastDirection(direction)\r\n        const docRef = doc(database, 'people/'+peopleId)\r\n        const personToUpdate = doc (database, \"people\", nameToDelete)\r\n        await updateDoc(personToUpdate, {\r\n            matches: arrayUnion(\"SL3GgUJDB3v3hpC1c1Zx\")\r\n        })\r\n        console.log(\"remove\")\r\n    }\r\n\r\n    // Log which person leave the screen\r\n    function outOfFrame(name) {\r\n        console.log(name + \"left the screen\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        // collection(database,'people').onSnapshot(snapshot => (\r\n        //     snapshot.docs.map(doc => doc.data())\r\n        // ))\r\n\r\n        // const peopleSnapshot = await getDocs(collection(database, 'people'))\r\n        // peopleSnapshot.docs.map(doc => doc.data())\r\n        \r\n        async function getPeople(){\r\n            const peopleSnapshot = await getDocs(collection(database, 'people'));\r\n            const peopleList = peopleSnapshot.docs.map(doc => {\r\n                    const id = doc.id;\r\n                    const data = doc.data();\r\n                    return {id, ...data};\r\n                });\r\n            setPeople(peopleList);\r\n            return peopleList;\r\n        }\r\n\r\n        (async() => {\r\n            const unsubscribe = await getPeople();\r\n            \r\n            return() => {\r\n                unsubscribe();\r\n            }\r\n        })();\r\n        \r\n\r\n    },[])\r\n\r\n    return ( \r\n        <div className=\"swipe_container\">\r\n            <div className=\"cards_container\">\r\n                {people.map(person => (\r\n                    <TinderCard className = \"swipe\"\r\n                                key = {person.name}\r\n                                preventSwipe = {['up', 'down']}\r\n                                onSwipe = {(dir) => swiped(dir, person.name, person.id)}\r\n                                onCardLeftScreen = {() => outOfFrame(person.name)} >       \r\n                            <div className = \"card\" style = {{backgroundImage: `url(${person.url})`}}>\r\n                                <h3>{person.name}</h3>\r\n                            </div>\r\n                    </TinderCard>\r\n                ))}\r\n                <div className=\"swipe_info\">\r\n                    {lastDirection ? (\r\n                        <p>You swiped {lastDirection} </p>\r\n                     ) : (\r\n                        <p/>\r\n                     )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Cards"]},"metadata":{},"sourceType":"module"}